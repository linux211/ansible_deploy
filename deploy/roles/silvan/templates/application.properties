#db vendor name, now you can config postgresql[hsql mysql], all db driver use the default port, postgresql use 5432, hsql use 9001, mysql use 3306
db.vendor.name=postgresql
#db key info
dbkey.path=
#the largest collect number
endpoint.collect.max.num=7
#bss config
bss.getregion.uri=https://127.0.0.1:8090/rest/v1/regions
#iam server url
iam.server.url=https://{{common_iam.ip}}:{{common_iam.port}}
#iam sign certificate uri
iam.sign.certificate.uri=/v3/OS-SIMPLE-CERT/certificates
#iam token admin role name
#iam.token.admin.role.name=admin
iam.token.admin.role.name=op_service
#silvan authentication switch
silvan.authentication=true
#framework's name for version hash
console.framework.id=framework

##############################################################
#################Safe tool Configuration####################
##############################################################

# the length of secret key. the value is 128\uFF0C 182\uFF0C or 256
crypt_aes_cbc_key_length=256

# the number of iteration for create secret key.
crypt_keygen_iteration_count=10000

# the path for store root key which created by wcc
crypt_keygen_rootkey_components=rootkey/rkc1;rootkey/rkc2;rootkey/rkc3

# automatically update the root key
crypt_rootkey_update_enabled=true
crypt_rootkey_lifetime_days=300
#crypt_rootkey_lifetime_seconds=100
encrypted_keys=encrypted.dbkey;server.rest.ssl.encrypt.certpass;server.rest.ssl.encrypt.keystorepass
encrypted.dbkey=d2NjX2NyeXB0ATQxNDU1MzVGNDM0MjQzOzM4MzIzMTM1NDU0NDQ2NDEzMDM4Mzg0MjM4MzUzMDM4MzAzMTQ0NDYzNTQyNDQzNTMxMzY0NTQ2NDEzMDM4MzE7MzEzNDM1MzIzNTM2MzQzODM0MzUzNzMzMzA7MzEzMDMwMzAzMDszM0VCMzVBRjkzQjY4NzdDREUzMEU3NUYxNjE3Mjk1Rjs
server.rest.ssl.encrypt.certpass=d2NjX2NyeXB0ATQxNDU1MzVGNDM0MjQzOzMxMzE0NjM4MzgzODMzNDE0NjM4Mzc0MjM5NDY0NDMyMzgzNDQ2MzAzMDM3MzQzNzMyNDEzNjQxMzEzMDMyNDM0MzM3NDQ0MjMzNDQzNDMzMzU0NTQyMzY0NDM0MzAzNDM2MzMzNjM2MzYzMTQyMzAzMzQ2MzU0NjQxMzc0NTQ2OzMxMzQzNTMyMzUzNjM0MzgzNDM1MzczMzMwOzMxMzAzMDMwMzA7MjFEQjVCMERBQjg3RjMzM0Y1RDcyRjUxQzgwMUJCOTk7
server.rest.ssl.encrypt.keystorepass=d2NjX2NyeXB0ATQxNDU1MzVGNDM0MjQzOzMxMzE0NjM4MzgzODMzNDE0NjM4Mzc0MjM5NDY0NDMyMzgzNDQ2MzAzMDM3MzQzNzMyNDEzNjQxMzEzMDMyNDM0MzM3NDQ0MjMzNDQzNDMzMzU0NTQyMzY0NDM0MzAzNDM2MzMzNjM2MzYzMTQyMzAzMzQ2MzU0NjQxMzc0NTQ2OzMxMzQzNTMyMzUzNjM0MzgzNDM1MzczMzMwOzMxMzAzMDMwMzA7MjFEQjVCMERBQjg3RjMzM0Y1RDcyRjUxQzgwMUJCOTk7


########################################################
# OC alarm
########################################################

# oc ip
app.oc.ip={{g_oc.region_api_ip}}

# oc port
app.oc.port={{g_oc.server_port}}

# oc alarm uri
app.oc.alarm.uri=/oc/v2.3/alarm/thirdalarms

# oc getting token uri
app.oc.token.uri=/oc/v2.3/tokens

# oc name
app.oc.username={{oc_username}}

# oc password and salt
app.oc.password={{oc_password}}
app.oc.password.salt={{oc_salt}}

# oc client host ip
app.oc.client.host.ip={{ansible_ssh_host}}

# omm alarm switch
omm.alarm.swicth=false
