---

dns: '{{g_dns.ip}}'

ntp: '{{g_ntp.ip}}'

timestamp: '{{lookup("pipe","date +%Y%m%d%H%M%S")}}'

tmp_dir: '/tmp/root'

log_remove_time_period: 90

initial_database: 'true'

initial_table: 'true'

elk:
  path: /opt/logstash/logstash-2.4.0
  elk_agent: logstash

common_iam:
  ip: '{{g_iam.region_api.address.split(":")[0]}}'
  port: '{{g_iam.region_api.address.split(":")[1]}}'
  user: apiGateway_admin
  password: MoLzUvpAkZVdHT61w5NIAw==
  salt: 9B39B45105ECB4DE34DD8D04B6212EE1
  domain: op_service
  admin_role_name: apiGateway_admin
  regionId:  '{{g_current_region.id}}'
  regionName: '{{g_current_region.name}}'

common:
  tomcat_version: 7.0.59
  SecAs_tomcat_version: 1.2.12
  zookeeper_client_port: 2181
  memcache_port: 11211
  kafka_port: 9092
  tomcat_rename_version: 7059
  cassandra_port: 9042
  user_apigateway: apigateway
  user_console: onframework
  root_user: root
  opsmonitor_user: zabbix
  crypt_passwd: $5$Bs59BYzF$i1/n/7giM0M2r.R79g1zPwAWJL34Fj33aTJpUlAGaR8
  home_dir: /opt/onframework
  apigateway_log: /var/log/apigateway
  console_log: /var/log/console
  zabbix_home: /home/zabbix
  etc_sudoer_path: /etc/sudoers   
  etc_profile_path: /etc/profile
  tomcat_thread_num_file: /tmp/tomcat_thread_num.log
  
nginx_list: '{% for host in groups["nginx"] %}{{ hostvars[host]["ansible_ssh_host"] }}{% if not loop.last %}|{% endif %}{% endfor %}'

shubao_list: '{% for host in groups["shubao"] %}{{ hostvars[host]["ansible_ssh_host"] }}{% if not loop.last %}|{% endif %}{% endfor %}'

allow_access_remote_host: '{{nginx_list}}|{{shubao_list}}'

#8u131,8u121
java_tag: '{{jdk_version[0:3]}}'

java_version: '{{jdk_version[3:]}}'

jdk_version_array: '{{java_version.split("u")}}'

jdk_version_start: '{{jdk_version_array[0]}}'

jdk_version_end: '{{jdk_version_array[1]}}'  

jdk:
  pkg_dir: '/pkg_repo/3rd/CommonService/{{java_tag}}/{{java_version}}'
  pkg_name: '{{java_tag}}-{{java_version}}-security-linux-x64.tar.gz'
  
jdk_versions:
  - jdk18066
  - jdk18071
  - jdk18072 
  - jdk180101
  - jdk180121
  - jre180131  
  
location: '{{config_file_folder}}'

apigateway_pkg_dir: /pkg_repo/service/ApiGateway/{{apigateway_version}}

apigateway_version: 3.0.3

recent_versions:
 - 3.0.2
 - 3.0.1
 - 3.0.0

module_version:
  silvan_version: '{{apigateway_version}}'
  gaussdb_version: '{{apigateway_version}}'
  memcached_version: '{{apigateway_version}}'
  nginx_version: '{{apigateway_version}}'
  ha_version: '{{apigateway_version}}'
  shubao_version: '{{apigateway_version}}'
  opsmonitor_version: '{{apigateway_version}}'
  kafka_version: '{{apigateway_version}}'
  zookeeper_version: '{{apigateway_version}}'
  asgard_version: '{{apigateway_version}}'  
  throttle_version: '{{apigateway_version}}'   
  cassandra_version: '{{apigateway_version}}'   
  
arb_port: '{{ARB_PORT|default()}}'
arb_ips: '{{ARB_IP.split(",")}}'
arb_hostsstr: '{% for ips in arb_ips %}{{ips}}:{{arb_port}}{% if not loop.last %},{% endif %}{% endfor %}'
arb_hosts: '{{arb_hostsstr.split(",")}}'  


silvan_uri: 'https://{{silvan_lb_float_ip}}:443'  
throttle_tool:
  pkg_dir: '{{apigateway_pkg_dir}}'
  pkg_name: ApiMgrTool-{{module_version.throttle_version}}-release.tar.gz
  silvan_all_uri: '{{silvan_uri}}/apithrottle_user'
  silvan_user_uri: '{{silvan_uri}}/apithrottle'
  environment: '{{config_file_folder}}'

ha_nginx: 
  pkg_dir: '{{apigateway_pkg_dir}}'
  pkg_name: ha-package-{{module_version.ha_version}}-release.tar.gz
  untar_dir: '{{common.home_dir}}'
  make_dir: '{{common.home_dir}}/ha/install'
  ha_config_file: '{{common.home_dir}}/ha/install/ha.conf'
  ha_install_file: '{{common.home_dir}}/ha/install/install_all.sh'
  ha_conf_dir: '{{common.home_dir}}/nginx/conf'
  ha_resource_conf_path: '{{common.home_dir}}/ha/module/harm/plugin/conf'
  ha_script_bin_path: '{{common.home_dir}}/ha/module/hacom/script'

nginx:
  sec_port: 443
  pkg_dir: '{{apigateway_pkg_dir}}'
  pkg_name: nginx-{{module_version.nginx_version}}-release.tar.gz
  untar_dir: '{{common.home_dir}}'
  install_dir: '{{common.home_dir}}/nginx'
  conf_dir: '{{common.home_dir}}/nginx/conf'
  bin_dir: '{{common.home_dir}}/nginx/bin'
  tools_dir: '{{common.home_dir}}/nginx/tools'
  ssl_dir: '{{common.home_dir}}/nginx/conf/SSL'
  nginx_certificate: server.crt 
  nginx_key: server.key 
  nginx_key_pass: key_pass
  nginx_conf_version: v2
  nginx_local_cpu: 4
  worker_connections: 100000
  lua_package_dir: '{{common.home_dir}}/nginx/luajit/share/lua/5.1'
  backup_name: '{{apigateway_version}}_nginx_backup.tar.gz'

silvan_ipstr: '{% for host in groups["silvan"] %}{{ hostvars[host]["ansible_ssh_host"] }}{% if not loop.last %},{% endif %}{% endfor %}'
silvan_ips: '{{silvan_ipstr.split(",")}}'

silvan:
  port: 8085
  sec_port: 8086
  pkg_dir: '{{apigateway_pkg_dir}}'
  pkg_name: silvan-package-{{apigateway_version}}-release.tar.gz
  ips: '{{silvan_ips}}'
  sqlpackage_name: usrThrottle
  untar_dir: '{{common.home_dir}}'
  make_dir: '{{common.home_dir}}/silvan/install'
  install_dir: '{{common.home_dir}}/silvan'
  bin_dir: '{{common.home_dir}}/silvan/bin'
  tool_dir: '{{common.home_dir}}/silvan/tool'
  certificate_dir: '{{common.home_dir}}/silvan/config'
  backup_name: '{{apigateway_version}}_silvan_backup.tar.gz'
  config_file: /opt/onframework/silvan/config/application.properties
  
cassandra_ipstr: '{% for host in groups["cassandra"] %}{{ hostvars[host]["ansible_ssh_host"] }}{% if not loop.last %},{% endif %}{% endfor %}'
cassandra_ips: '{{cassandra_ipstr.split(",")}}'
is_support_api_monitor: '{{"true" if cassandra_ips|length > 1 else "false" }}'  
 
cassandra:
  pkg_dir: '{{apigateway_pkg_dir}}'
  pkg_name: cassandra-{{module_version.cassandra_version}}-release.tar.gz
  home: '/opt/{{common.user_apigateway}}'
  path: '/opt/{{common.user_apigateway}}/cassandra'  
  install_dir: '/opt/{{common.user_apigateway}}/cassandra'
  bin_dir: '/opt/{{common.user_apigateway}}/cassandra/bin'
  install_config_file: '/opt/{{common.user_apigateway}}/cassandra/install/cassandra.cfg'
  install_script_file: '/opt/{{common.user_apigateway}}/cassandra/install/cassandra_install.sh'
  hosts: '{{cassandra_ips}}'
 
memcached_ipstr: '{% for host in groups["memcached"] %}{{ hostvars[host]["ansible_ssh_host"] }}{% if not loop.last %},{% endif %}{% endfor %}'
memcached_ips: '{{memcached_ipstr.split(",")}}'
memcached_hostsstr: '{% for ips in memcached_ips %}{{ips}}:{{common.memcache_port}}{% if not loop.last %},{% endif %}{% endfor %}'
memcached_hosts: '{{memcached_hostsstr.split(",")}}'

memcached:
  pkg_dir: '{{apigateway_pkg_dir}}'
  pkg_name: memcached-{{module_version.memcached_version}}-release.tar.gz
  untar_dir: '{{common.home_dir}}'
  install_dir: '{{common.home_dir}}/memcached'
  bin_dir: '{{common.home_dir}}/memcached/bin'
  install_script_file: '{{common.home_dir}}/memcached/install/install_memcached.sh'
  hosts: '{{memcached_hosts}}'

zookeeper_ipstr: '{% for host in groups["kafka"] if hostvars[host]["IS_STANDBY"]!="Y"%}{{hostvars[host]["ansible_ssh_host"]}}{% if not loop.last %},{% endif %}{% endfor %}'
zookeeper_ips: '{{zookeeper_ipstr.split(",")}}'
zookeeper_hostsstr: '{% for ips in zookeeper_ips %}{{ips}}:{{common.zookeeper_client_port}}{% if not loop.last %},{% endif %}{% endfor %}'
zookeeper_hosts: '{{zookeeper_hostsstr.split(",")}}'

zookeeper:
  ips: '{{zookeeper_ips}}'
  server_ports:
    - 8880
    - 7770
  pkg_dir:  '{{apigateway_pkg_dir}}'
  pkg_name:  zookeeper-{{module_version.zookeeper_version}}-release.tar.gz
  pkg_zookeeper_name: zookeeper-3.4.6.tar.gz
  hosts: '{{zookeeper_hosts}}'

kafka_ipstr: '{% for host in groups["kafka"] %}{{ hostvars[host]["ansible_ssh_host"] }}{% if not loop.last %},{% endif %}{% endfor %}'
kafka_ips: '{{kafka_ipstr.split(",")}}'
kafka_hostsstr: '{% for ips in kafka_ips %}{{ips}}:{{common.kafka_port}}{% if not loop.last %},{% endif %}{% endfor %}'
kafka_hosts: '{{kafka_hostsstr.split(",")}}'

kafka:  
  pkg_dir: '{{apigateway_pkg_dir}}'
  pkg_name: kafka-{{module_version.kafka_version}}-release.tar.gz
  pkg_install_name: kafka_2.10-0.8.2.1.tgz
  hosts: '{{kafka_hosts}}'
  
kafka_topics:
 - accesslog
 - aks
 - banlist
 - event
 - refresh_topic
 - report_event
 - tenant_to_upload
 - throttle  
  
asgard:
  pkg_dir: '{{apigateway_pkg_dir}}'
  pkg_name: asgard-{{module_version.asgard_version}}-release.tar.gz
  backup_name: '{{apigateway_version}}_asgard_backup.tar.gz'
  config_file: /opt/apigateway/asgard/config/application.properties

tomcat:
  catalina_home: /opt/{{common.user_apigateway}}/tomcat{{common.tomcat_rename_version}}
  catalina_new_home: /opt/{{common.user_apigateway}}/tomcat
  pkg_dir: /pkg_repo/3rd/CommonService/tomcat/{{common.tomcat_version}}
  pkg_new_dir: /pkg_repo/3rd/CommonService/tomcat/{{common.SecAs_tomcat_version}}
  pkg_name: apache-tomcat-{{common.tomcat_version}}.tar.gz
  pkg_new_name: SecAs-{{common.SecAs_tomcat_version}}-Release.tar.gz
  old_dir: /opt/{{common.user_apigateway}}/apache-tomcat-{{common.tomcat_version}}
  old_secas_dir: /opt/{{common.user_apigateway}}/SecAs-{{common.SecAs_tomcat_version}}
  new_dir: /opt/{{common.user_apigateway}}/tomcat{{common.tomcat_rename_version}}
  new_secas_dir: /opt/{{common.user_apigateway}}/tomcat
  error_page: error_page.zip

shubao_go:
  pkg_dir: '{{apigateway_pkg_dir}}'
  pkg_name: shubao-{{module_version.shubao_version}}-release.tar.gz
  script_home: /opt/{{common.user_apigateway}}/shubao
  home: /opt/{{common.user_apigateway}}
  backup_name: '{{apigateway_version}}_shubao_backup.tar.gz'
  config_file: /opt/apigateway/shubao/conf/shubao_app.json 
  
etl:
  pkg_dir: '{{apigateway_pkg_dir}}'
  pkg_name: etl-{{module_version.shubao_version}}-release.tar.gz
  home: '/opt/{{common.user_apigateway}}'
  path: '/opt/{{common.user_apigateway}}/etl'
  backup_name: '{{apigateway_version}}_etl_backup.tar.gz'
  config_file: /opt/apigateway/shubao/conf/shubao_app.json   
  
apigateway:
  https_port: 7443
  http_port: 8443
  pkg_dir: '{{apigateway_pkg_dir}}'
  pkg_name: api-gateway-{{module_version.shubao_version}}-release.tar.gz
  script_home: /opt/{{common.user_apigateway}}/shubao
  home: /opt/{{common.user_apigateway}}
  config_file: /opt/apigateway/tomcat/webapps/apigateway/WEB-INF/classes/config/application.properties
  
gaussdb:
  backup_setting_file:  /opt/gaussdb/ha/tools/backupAndRestore/backup.conf
  backup_config_file:  /opt/gaussdb/ha/tools/backupAndRestore/Upload_Server.cfg
